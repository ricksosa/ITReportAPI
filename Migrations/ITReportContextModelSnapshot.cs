// <auto-generated />
using System;
using ITReportAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITReportAPI.Migrations
{
    [DbContext(typeof(ITReportContext))]
    partial class ITReportContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ITReportAPI.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("ITReportAPI.Models.CategoriaComputadora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CategoriaComputadora");
                });

            modelBuilder.Entity("ITReportAPI.Models.CategoriaReporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CategoriaReporte");
                });

            modelBuilder.Entity("ITReportAPI.Models.Componente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("ComputadoraId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ComputadoraId");

                    b.ToTable("Componente");
                });

            modelBuilder.Entity("ITReportAPI.Models.Computadora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Gabinete")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdSala")
                        .HasColumnType("int");

                    b.Property<int>("SalaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalaId");

                    b.ToTable("Computadora");
                });

            modelBuilder.Entity("ITReportAPI.Models.EstadoReporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("EstadoReporte");
                });

            modelBuilder.Entity("ITReportAPI.Models.Reporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("ComentariosAdmin")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ComentariosReporte")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ComputadoraId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaDeReporte")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdComputadora")
                        .HasColumnType("int");

                    b.Property<int>("IdSala")
                        .HasColumnType("int");

                    b.Property<int>("IncidenteId")
                        .HasColumnType("int");

                    b.Property<int>("SalaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ComputadoraId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("IncidenteId");

                    b.HasIndex("SalaId");

                    b.ToTable("Reportes");
                });

            modelBuilder.Entity("ITReportAPI.Models.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Edificio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Salas");
                });

            modelBuilder.Entity("ITReportAPI.Models.TipoDeIncidente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoDeIncidente");
                });

            modelBuilder.Entity("ITReportAPI.Models.Componente", b =>
                {
                    b.HasOne("ITReportAPI.Models.CategoriaComputadora", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITReportAPI.Models.Computadora", null)
                        .WithMany("Components")
                        .HasForeignKey("ComputadoraId");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("ITReportAPI.Models.Computadora", b =>
                {
                    b.HasOne("ITReportAPI.Models.Sala", "Sala")
                        .WithMany("Computadoras")
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("ITReportAPI.Models.Reporte", b =>
                {
                    b.HasOne("ITReportAPI.Models.CategoriaReporte", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITReportAPI.Models.Computadora", "Computadora")
                        .WithMany()
                        .HasForeignKey("ComputadoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITReportAPI.Models.EstadoReporte", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITReportAPI.Models.TipoDeIncidente", "Incidente")
                        .WithMany()
                        .HasForeignKey("IncidenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITReportAPI.Models.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Computadora");

                    b.Navigation("Estado");

                    b.Navigation("Incidente");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("ITReportAPI.Models.Computadora", b =>
                {
                    b.Navigation("Components");
                });

            modelBuilder.Entity("ITReportAPI.Models.Sala", b =>
                {
                    b.Navigation("Computadoras");
                });
#pragma warning restore 612, 618
        }
    }
}
